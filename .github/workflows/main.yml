name: iOS Build

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Deployment environment (tst|acc|store)
        required: true
        default: tst
      configuration:
        description: Xcode configuration (e.g. Acceptance or Release)
        required: true
        default: Release
      xcWorkspacePath:
        description: Path to .xcworkspace (e.g. ios/MyLuminus.xcworkspace)
        required: true
        default: ios/MyLuminus.xcworkspace
      scheme:
        description: Xcode scheme (e.g. MyLuminus)
        required: true
        default: MyLuminus
      xcodeVersion:
        description: Xcode app folder name to select (e.g. Xcode_16.4.app). Leave empty to keep default
        required: false
        default: ""

permissions:
  actions: read
  contents: read

jobs:
  build:
    runs-on: macos-14
    env:
      CONFIGURATION: ${{ inputs.configuration }}
      WORKSPACE: ${{ inputs.xcWorkspacePath }}
      SCHEME: ${{ inputs.scheme }}
      ENVIRONMENT: ${{ inputs.environment }}
      ARTIFACT_NAME: ios-ipa
      ARCHIVE_PATH: output/archive/${{ inputs.scheme }}.xcarchive
      EXPORT_PATH: output/package
      DERIVED_DATA_PATH: output/DerivedData
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode version (optional)
        if: ${{ inputs.xcodeVersion != '' }}
        run: |
          sudo xcode-select -s "/Applications/${{ inputs.xcodeVersion }}"
          xcodebuild -version

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm dependencies
        run: npm ci --legacy-peer-deps

      - name: Pre-build adjustments
        run: npm run pre-build

      - name: Ensure CocoaPods
        run: |
          brew install cocoapods || true
          npm run ios:cocoapod

      - name: Import code signing certs
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.IOS_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_P12_PASSWORD }}

      - name: Import provisioning profiles
        uses: apple-actions/import-provisioning-profiles@v1
        with:
          profiles-base64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}

      - name: Pod install
        working-directory: ios
        run: pod install --quiet

      - name: Build and archive
        run: |
          set -euo pipefail
          mkdir -p "$EXPORT_PATH" "$DERIVED_DATA_PATH" $(dirname "$ARCHIVE_PATH")
          xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration "$CONFIGURATION" \
            -sdk iphoneos \
            -derivedDataPath "$DERIVED_DATA_PATH" \
            -archivePath "$ARCHIVE_PATH" \
            archive | xcpretty && exit ${PIPESTATUS[0]}

      - name: Create exportOptions.plist
        run: |
          set -euo pipefail
          METHOD="ad-hoc"
          if [ "${ENVIRONMENT}" = "store" ]; then
            METHOD="app-store"
          fi
          cat > exportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>${METHOD}</string>
            <key>compileBitcode</key>
            <false/>
            <key>destination</key>
            <string>export</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>teamID</key>
            <string>${{ secrets.APPLE_TEAM_ID }}</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${{ secrets.BUNDLE_IDENTIFIER }}</key>
              <string>${{ secrets.PROVISIONING_PROFILE_NAME }}</string>
            </dict>
          </dict>
          </plist>
          EOF

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportPath "$EXPORT_PATH" \
            -exportOptionsPlist exportOptions.plist | xcpretty && exit ${PIPESTATUS[0]}
          ls -la "$EXPORT_PATH"

      - name: Upload artifact (IPA)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.EXPORT_PATH }}/*.ipa
          if-no-files-found: error